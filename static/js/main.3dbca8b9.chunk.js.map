{"version":3,"sources":["content.js","App.js","index.js"],"names":["content","name","image","description","App","cards","i","length","push","Grid","container","spacing","style","padding","Fragment","AppBar","position","Toolbar","IconButton","margin","paddingTop","width","ContentGridCard","props","item","xs","Card","CardHeader","title","CardContent","maxHeight","objectFit","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAaA,EAAU,CACnB,CAACC,KAAM,eAAgBC,MAAO,oCAAqCC,YAAa,gCAChF,CAACF,KAAM,UAAWC,MAAO,gCAAiCC,YAAa,sBACvE,CAACF,KAAM,cAAeC,MAAO,mCAAoCC,YAAa,0BAC9E,CAACF,KAAM,oCAAqCC,MAAO,+BAAgCC,YAAa,+BAChG,CAACF,KAAM,gBAAiBC,MAAO,2BAA4BC,YAAa,yCACxE,CAACF,KAAM,mBAAoBC,MAAO,8BAA+BC,YAAa,iDAC9E,CAACF,KAAM,oCAAqCC,MAAO,qBAAsBC,YAAa,+BACtF,CAACF,KAAM,gBAAiBC,MAAO,2BAA4BC,YAAa,yCACxE,CAACF,KAAM,mBAAoBC,MAAO,8BAA+BC,YAAa,kDCGnE,SAASC,IAEtB,IADA,IAAIC,EAAQ,GACJC,EAAE,EAAGA,EAAEN,EAAQO,OAAQD,GAAG,EAChCD,EAAMG,KACJ,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,MAAO,CAACC,QAAS,QAA7C,UACE,cAAC,EAAD,CAAiBb,QAASA,EAAQM,KAClC,cAAC,EAAD,CAAiBN,QAASA,EAAQM,EAAE,KACpC,cAAC,EAAD,CAAiBN,QAASA,EAAQM,EAAE,SAI1C,OACE,eAAC,IAAMQ,SAAP,WACE,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAFJ,qBAOF,qBAAKN,MAAO,CAACO,OAAQ,OAAQC,WAAY,OAAQC,MAAO,OAAxD,SACE,cAACZ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGN,SAOX,IAAMiB,EAAkB,SAAAC,GAAU,IACzBvB,EAAWuB,EAAXvB,QACP,OAAGA,EAEC,cAACS,EAAA,EAAD,CAAMe,MAAI,EAACC,GAAI,EAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAO5B,EAAQC,OAC3B,eAAC4B,EAAA,EAAD,WACE,qBAAKjB,MAAO,CAACkB,UAAW,QAAST,MAAO,OAAQU,UAAW,SAAUC,IAAKhC,EAAQE,MAAO+B,IAAI,KAC7F,4BAAIjC,EAAQG,sBAMf,yBCrDT+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAD,MAEFiC,SAASC,eAAe,W","file":"static/js/main.3dbca8b9.chunk.js","sourcesContent":["export const content = [\n    {name: 'Banana Bread', image: '/food-site/images/BananaBread.jpg', description: 'Some tasty bread with banana'},\n    {name: 'Cookies', image: '/food-site/images/cookies.jpg', description: 'Some tasty cookies'},\n    {name: 'Cottage Pie', image: '/food-site/images/CottagePie.jpg', description: 'Some tasty cottage pie'},\n    {name: 'Cottage Retreat charcuterie board', image: '/food-site/images/cheese.jpg', description: 'Some tasty cheese and meats'},\n    {name: 'Greek Burgers', image: '/images/GreekBurgers.jpg', description: 'Some tasty burkers with a Greek twist'},\n    {name: 'Mushroom Chicken', image: '/images/MushroomChicken.jpg', description: 'Some tasty chicken with a rich mushroom sauce'},\n    {name: 'Cottage Retreat charcuterie board', image: '/images/cheese.jpg', description: 'Some tasty cheese and meats'},\n    {name: 'Greek Burgers', image: '/images/GreekBurgers.jpg', description: 'Some tasty burkers with a Greek twist'},\n    {name: 'Mushroom Chicken', image: '/images/MushroomChicken.jpg', description: 'Some tasty chicken with a rich mushroom sauce'},\n]","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { content } from './content';\n\nexport default function App() {\n  let cards = [];\n  for(let i=0; i<content.length; i+=3) {\n    cards.push(\n      <Grid container spacing={3} style={{padding: '10px'}}>\n        <ContentGridCard content={content[i]}/>\n        <ContentGridCard content={content[i+1]}/>\n        <ContentGridCard content={content[i+2]}/>\n      </Grid>\n    )\n  }\n  return (\n    <React.Fragment>\n      <AppBar position='fixed'>\n        <Toolbar>\n          <IconButton>\n            <MenuIcon />\n          </IconButton>\n          Jordan's food\n        </Toolbar>\n      </AppBar>\n      <div style={{margin: 'auto', paddingTop: '74px', width: '70%'}}>\n        <Grid container spacing={3}>\n          {cards}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst ContentGridCard = props => {\n  const {content} = props;\n  if(content){\n    return(\n      <Grid item xs={4}>\n        <Card>\n          <CardHeader title={content.name}></CardHeader>\n          <CardContent>\n            <img style={{maxHeight: '295px', width: '100%', objectFit: 'cover'}} src={content.image} alt=\"\"/>\n            <p>{content.description}</p>\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  }\n  return(<div/>)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}