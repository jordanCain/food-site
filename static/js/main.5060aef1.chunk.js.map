{"version":3,"sources":["Components/SignInPanel.js","Components/Header.js","Components/GridCard.js","content.js","Containers/ContentGrid.js","App.js","Config/Firebase.js","index.js"],"names":["firebaseUiConfig","signInFlow","signInOptions","firebase","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignInPanel","uiConfig","firebaseAuth","Header","props","AppBar","position","Toolbar","IconButton","ContentGridCard","content","Grid","item","xs","Card","CardHeader","title","name","CardContent","style","maxHeight","width","objectFit","src","image","alt","description","TestButton","Fragment","onClick","e","database","ref","push","set","test","then","snapshot","console","log","error","TestDatabaseSum","useState","data","setData","get","testy","forEach","each","val","map","d","ContentGrid","cards","i","length","container","spacing","padding","margin","paddingTop","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","isSignedIn","setIsSignedIn","useEffect","unregisterAuthObserver","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAKMA,EAAmB,CACvBC,WAAY,QACZC,cAAe,CACbC,IAASC,KAAKC,kBAAkBC,aAElCC,UAAW,CAETC,4BAA6B,kBAAM,KASxBC,EALK,WAClB,OACE,cAAC,IAAD,CAAoBC,SAAUV,EAAkBW,aAAcR,IAASC,U,yCCA5DQ,EAZA,SAAAC,GACb,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAFJ,sB,gCCmBSC,EArBS,SAAAL,GAAU,IACzBM,EAAWN,EAAXM,QACP,OAAGA,EAEC,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAON,EAAQO,OAC3B,eAACC,EAAA,EAAD,WACE,qBAAKC,MAAO,CAACC,UAAW,QAASC,MAAO,OAAQC,UAAW,SAAUC,IAAKb,EAAQc,MAAOC,IAAI,KAC7F,gCACGf,EAAQgB,YACT,cAAC,EAAD,IACA,cAAC,EAAD,eAOL,yBAIHC,EAAa,SAAAvB,GAUjB,OACE,cAAC,IAAMwB,SAAP,UACE,wBAAQC,QAXS,SAAAC,GACnBpC,IAASqC,WAAWC,IAAI,QAAQC,OAAOC,IAAI,CAACC,KAAM,gBAC/CC,MAAK,SAAAC,GACJC,QAAQC,IAAI,cACX,SAAAC,GACDF,QAAQC,IAAI,QAAUC,OAMxB,uBAMAC,EAAkB,WAAO,IAAD,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACfC,EADe,KAc5B,OACE,eAAC,IAAMhB,SAAP,WACE,mBAAGC,QAdiB,SAAAC,GACtBpC,IAASqC,WAAWC,IAAI,QAAQa,MAC7BT,MAAK,SAAAC,GACJ,IAAIS,EAAQ,GACZT,EAASU,SAAQ,SAAAC,GACfF,EAAMb,KAAKe,EAAKC,UAElBL,EAAQE,MACP,SAAAN,GACDF,QAAQC,IAAI,QAAUC,OAKxB,sBACA,4BACGG,EAAKO,KAAI,SAAAC,GAAM,OAAQA,EAAEhB,cClErBzB,EAAU,CACnB,CAACO,KAAM,eAAgBO,MAAO,oCAAqCE,YAAa,qCAChF,CAACT,KAAM,UAAWO,MAAO,gCAAiCE,YAAa,sBACvE,CAACT,KAAM,cAAeO,MAAO,mCAAoCE,YAAa,0BAC9E,CAACT,KAAM,oCAAqCO,MAAO,+BAAgCE,YAAa,+BAChG,CAACT,KAAM,gBAAiBO,MAAO,qCAAsCE,YAAa,yCAClF,CAACT,KAAM,mBAAoBO,MAAO,wCAAyCE,YAAa,iDACxF,CAACT,KAAM,oCAAqCO,MAAO,+BAAgCE,YAAa,+BAChG,CAACT,KAAM,gBAAiBO,MAAO,qCAAsCE,YAAa,yCAClF,CAACT,KAAM,mBAAoBO,MAAO,wCAAyCE,YAAa,kDCgB7E0B,EAnBK,WAElB,IADA,IAAIC,EAAQ,GACJC,EAAE,EAAGA,EAAE5C,EAAQ6C,OAAQD,GAAG,EAChCD,EAAMpB,KACJ,eAACtB,EAAA,EAAD,CAAM6C,WAAS,EAACC,QAAS,EAAGtC,MAAO,CAACuC,QAAS,QAA7C,UACE,cAAC,EAAD,CAAiBhD,QAASA,EAAQ4C,IAASA,GAC3C,cAAC,EAAD,CAAiB5C,QAASA,EAAQ4C,EAAE,IAASA,EAAE,GAC/C,cAAC,EAAD,CAAiB5C,QAASA,EAAQ4C,EAAE,IAASA,EAAE,KAHUA,IAO/D,OACE,qBAAKnC,MAAO,CAACwC,OAAQ,OAAQC,WAAY,OAAQvC,MAAO,OAAxD,SACE,cAACV,EAAA,EAAD,CAAM6C,WAAS,EAACC,QAAS,EAAzB,SACGJ,OCbT3D,IAASmE,cCPqB,CAC5BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,sDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CDET,IAwBeC,EAxBH,WAAO,IAAD,EACoB3B,oBAAS,GAD7B,mBACT4B,EADS,KACGC,EADH,KAWhB,OAPAC,qBAAU,WACR,IAAMC,EAAyB/E,IAASC,OAAO+E,oBAAmB,SAAAC,GAChEJ,IAAgBI,MAElB,OAAO,kBAAMF,OACZ,IAEEH,EAMD,eAAC,IAAM1C,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OANF,cAAC,EAAD,KElBNgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5060aef1.chunk.js","sourcesContent":["import React from 'react';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n\nconst firebaseUiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n}\n\nconst SignInPanel = () => {\n  return (\n    <StyledFirebaseAuth uiConfig={firebaseUiConfig} firebaseAuth={firebase.auth()} />\n  );\n}\nexport default SignInPanel;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Header = props => {\n  return (\n    <AppBar position='fixed'>\n      <Toolbar>\n        <IconButton>\n          <MenuIcon />\n        </IconButton>\n        Jordan's food\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default Header;","import React, {useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport firebase from 'firebase';\n\nconst ContentGridCard = props => {\n  const {content} = props;\n  if(content){\n    return(\n      <Grid item xs={4}>\n        <Card>\n          <CardHeader title={content.name}></CardHeader>\n          <CardContent>\n            <img style={{maxHeight: '295px', width: '100%', objectFit: 'cover'}} src={content.image} alt=\"\"/>\n            <div>\n              {content.description}\n              <TestButton/>\n              <TestDatabaseSum/>\n            </div>\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  }\n  return(<div/>)\n}\nexport default ContentGridCard;\n\nconst TestButton = props => {\n  const testDatabase = e => {\n    firebase.database().ref('test').push().set({test: 'hello world'})\n      .then(snapshot => {\n        console.log('success');\n      }, error => {\n        console.log('error' + error);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <button onClick={testDatabase}>Try Me</button>\n    </React.Fragment>\n  )\n}\n\n\nconst TestDatabaseSum = () => {\n  const [data, setData] = useState([]);\n  const testGetDatabase = e => {\n    firebase.database().ref('test').get()\n      .then(snapshot => {\n        let testy = [];\n        snapshot.forEach(each => {\n          testy.push(each.val())\n        });\n        setData(testy);\n      }, error => {\n        console.log('error' + error);\n      });\n  }\n  return (\n    <React.Fragment>\n      <p onClick={testGetDatabase}>click me</p>\n      <p>\n        {data.map(d => {return (d.test)})}\n      </p>\n    </React.Fragment>\n  )\n}","export const content = [\n    {name: 'Banana Bread', image: '/food-site/images/BananaBread.jpg', description: 'Some tasty bread with banana test'},\n    {name: 'Cookies', image: '/food-site/images/Cookies.jpg', description: 'Some tasty cookies'},\n    {name: 'Cottage Pie', image: '/food-site/images/CottagePie.jpg', description: 'Some tasty cottage pie'},\n    {name: 'Cottage Retreat charcuterie board', image: '/food-site/images/Cheese.jpg', description: 'Some tasty cheese and meats'},\n    {name: 'Greek Burgers', image: '/food-site/images/GreekBurgers.jpg', description: 'Some tasty burkers with a Greek twist'},\n    {name: 'Mushroom Chicken', image: '/food-site/images/MushroomChicken.jpg', description: 'Some tasty chicken with a rich mushroom sauce'},\n    {name: 'Cottage Retreat charcuterie board', image: '/food-site/images/Cheese.jpg', description: 'Some tasty cheese and meats'},\n    {name: 'Greek Burgers', image: '/food-site/images/GreekBurgers.jpg', description: 'Some tasty burkers with a Greek twist'},\n    {name: 'Mushroom Chicken', image: '/food-site/images/MushroomChicken.jpg', description: 'Some tasty chicken with a rich mushroom sauce'},\n]","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ContentGridCard from '../Components/GridCard';\nimport { content } from '../content';\n\nconst ContentGrid = () => {\n  let cards = [];\n  for(let i=0; i<content.length; i+=3) {\n    cards.push(\n      <Grid container spacing={3} style={{padding: '10px'}} key={i}>\n        <ContentGridCard content={content[i]} key={i}/>\n        <ContentGridCard content={content[i+1]} key={i+1}/>\n        <ContentGridCard content={content[i+2]} key={i+2}/>\n      </Grid>\n    )\n  }\n  return (\n    <div style={{margin: 'auto', paddingTop: '74px', width: '70%'}}>\n      <Grid container spacing={3}>\n        {cards}\n      </Grid>\n    </div>\n  )\n}\nexport default ContentGrid;","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport {firebaseConfig} from './Config/Firebase';\nimport SignInPanel from './Components/SignInPanel'\nimport Header from './Components/Header';\nimport ContentGrid from './Containers/ContentGrid';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      setIsSignedIn(!!user);\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n  \n  if (!isSignedIn) {\n    return (\n      <SignInPanel />\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <Header />\n        <ContentGrid />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;","export const firebaseConfig = {\n  apiKey: \"AIzaSyCao08sVU02U5oSc7Wrkzw2DyF2hbp_qNs\",\n  authDomain: \"foodsite-59f79.firebaseapp.com\",\n  databaseURL: \"https://foodsite-59f79-default-rtdb.firebaseio.com/\",\n  projectId: \"foodsite-59f79\",\n  storageBucket: \"foodsite-59f79.appspot.com\",\n  messagingSenderId: \"517867438024\",\n  appId: \"1:517867438024:web:a50f78d45ec3e69798cafd\"\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}